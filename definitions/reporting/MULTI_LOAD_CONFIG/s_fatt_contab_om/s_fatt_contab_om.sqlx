config {
    type: "incremental",
    schema: "DM_DIGITAL_STAGING",
    name: "S_FATTURATO_CONTABILIZZATO_20230101"
}

        WITH s_log AS (
            SELECT
                UPPER(brand) AS insegna,
                UPPER(country) AS country,
                TO_BASE64(SHA256(mail_cliente)) AS mail_cliente,
                customer_number AS customer_number,
                order_number AS order_number,
                delivery_name AS delivery_name,
                rma_number AS rma_number,
                UPPER(rma_type) AS rma_type,
                return_reason AS return_reason,
                RIGHT(sku, 14) AS sku,
                UPPER(sku_type) AS sku_type,
                DATE(order_date) AS order_date,
                DATE(daily_sales_date) AS daily_sales_date,
                DATE(shipment_date) AS shipment_date,
                DATE(delivery_date) AS delivery_date,
                DATE(return_date) AS return_open_date,
                DATE(close_return_time) AS return_close_date,
                IF(quantity > 0, DATE_DIFF(daily_sales_date, order_date, DAY), NULL) AS time_order_to_sales,
                IF(quantity > 0, DATE_DIFF(shipment_date, daily_sales_date, DAY), NULL) AS time_sales_to_shipment,
                IF(quantity > 0, DATE_DIFF(delivery_date, shipment_date, DAY), NULL) AS time_shipment_to_delivery,
                note AS note,
                point_of_presence AS point_of_presence,
                LOWER(CONCAT(
                    COALESCE(shipping_address.indirizzo, ''), ' ', COALESCE(shipping_address.provincia, ''), ' ', COALESCE(shipping_address.contea, ''), 
                    ' ', COALESCE(shipping_address.cap, ''), ' ', COALESCE(shipping_address.stato, ''), ' ', COALESCE(shipping_address.nazione, ''), 
                    ' ', COALESCE(shipping_address.citta, '')
                )) AS shipping_address,
                REPLACE(shipping_address.cap, "'", "") AS zip_code,
                order_click_collect AS o2o_order_click_collect,
                exchange_online AS o2o_exchange_online,
                return_in_store AS o2o_return_in_store,
                UPPER(payment_method) AS payment_method,
                promo_type AS promo_type,
                promocode AS promo_code,
                currency AS currency,
                IFNULL(mark_down, IF(unit_selling_price < list_price, True, False)) AS mark_down,
                shipping_amt_trx AS shipping_amt_trx,
                shipping_amt_fnc AS shipping_amt_fnc,
                giftcard_code AS giftcard_code,
                giftcard_amount AS giftcard_amount,
                'INSERT' AS record_type,
                IF(quantity > 0, quantity, 0) AS quantity,
                IF(quantity < 0, ABS(quantity), 0) AS quantity_return,
                list_price AS list_price,
                unit_selling_price AS unit_selling_price,
                gross_amount_trx AS gross_amount_trx,
                net_amount_trx AS net_amount_trx,
                vat_amount_trx AS vat_amount_trx,
                vat_rate AS vat_rate,
                exchange_rate AS exchange_rate,
                gross_amount_fnc AS gross_amount_fnc,
                net_amount_fnc AS net_amount_fnc,
                vat_amount_fnc AS vat_amount_fnc,
                IF(list_price != 0, CAST((1 - (unit_selling_price / list_price)) AS FLOAT64), NULL) AS markdown_ratio,
                IF(quantity > 0, net_amount_fnc, 0) AS revenue_net,
                IF(quantity > 0, gross_amount_fnc, 0) AS revenue_gross,
                IF(quantity > 0, vat_amount_fnc, 0) AS vat,
                IF(quantity < 0, net_amount_fnc, 0) AS return_revenue_net,
                IF(quantity < 0, gross_amount_fnc, 0) AS return_revenue_gross,
                IF(quantity < 0, vat_amount_fnc, 0) AS return_vat,
                CONCAT(brand, "-", sku, "-", order_date) AS key_stock,
                CONCAT(brand, "-", order_number) AS key_web_analytics,
                _PARTITIONTIME AS ts_creazione,
                CURRENT_TIMESTAMP() AS ts_inserimento,
                CURRENT_TIMESTAMP() AS ts_modifica,
                'OM' AS project_name,
                line_id,
                tracking_number
            FROM ${ref("S_LOG_FATTURATO_CONTABILIZZATO_OM")}
            WHERE EXTRACT(DATE FROM _PARTITIONTIME) = CURRENT_DATE()
            AND DATE(daily_sales_date) IN (SELECT * FROM ${ref("s_fatt_contab_om_input_output_partitions")})
            AND LOWER(sku) != 'shipping charges'
        )
        SELECT s_log.* except(customer_number),
            map_c.pk_consumer_new AS corporate_customer_id,
            IF(o2o_order_click_collect, shipping_address, '') AS shipping_address_store,
            IF(o2o_order_click_collect, '', shipping_address) AS shipping_address_customer,
        FROM s_log
        LEFT JOIN (
            SELECT DISTINCT pk_consumer_old, pk_consumer_new, 
            ROW_NUMBER() OVER (PARTITION BY pk_consumer_old ORDER BY timestamp_fine IS NULL DESC, timestamp_fine DESC) AS rank
            FROM ${ref("V_MAPPING_CONSUMER")}
            WHERE f_anagrafica
        ) map_c
        ON (s_log.customer_number = map_c.pk_consumer_old AND rank = 1)
        