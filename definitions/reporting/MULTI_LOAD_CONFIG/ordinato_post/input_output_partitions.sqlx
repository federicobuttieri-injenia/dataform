config {
    type: "view",
    schema: "injenia",
    name: "ordinato_post_input_output_partitions"
}

-- date vendita con prezzi o modelli modificati nella data di oggi
SELECT DISTINCT EXTRACT(YEAR FROM data_ordine)
FROM (
	SELECT societa, negozio, anno, stagione, modello, barcode_negozio, data_ordine, listino_acquisto, listino_vendita, cliente, tipo_ordine_cliente
	FROM ${ref("F_ORDINATO_*")}
) AS O
LEFT JOIN (
	SELECT DISTINCT cli.societa, cli.anno, cli.stagione, cli.cliente, p.porta as negozio, cli.tipo_ordine_cliente
	FROM ${ref("D_CLIENTE_STAGIONE")} AS cli
	LEFT JOIN ${ref("D_PORTA")} AS num_porta ON (
		CAST(cli.punto_vendita_retail AS INT64) = num_porta.numero_porta AND num_porta.numero_porta != 0
	)
	JOIN ${ref("D_PORTA")} AS p ON (
		COALESCE(num_porta.porta, cli.punto_vendita_retail) = p.porta
	)
) neg USING (cliente, societa, anno, stagione, tipo_ordine_cliente)
LEFT JOIN (
	SELECT
		IF(barcode_negozio IS NOT NULL AND barcode_negozio != '', barcode_negozio, NULL) AS barcode_negozio,
		IF(modello_retail IS NOT NULL AND modello_retail != '', modello_retail, NULL) AS modello_retail,
		IF(ean IS NOT NULL AND ean != '', ean, NULL) AS ean,
		IF(societa IS NOT NULL AND societa !='', societa, NULL) AS societa,
		IF(anno IS NOT NULL AND anno > 0, anno, NULL) AS anno,
		IF(stagione IS NOT NULL AND stagione != 0, stagione, NULL) AS stagione,
		IF(uscita_collezione IS NOT NULL AND uscita_collezione !='', uscita_collezione, NULL) AS  uscita_collezione,
		IF(modello IS NOT NULL AND modello !='', modello, NULL) AS modello,
		IF(variante IS NOT NULL AND variante !='', variante, NULL) AS variante,
		IF(stagionale IS NOT NULL AND stagionale !='', stagionale, NULL) AS stagionale,
		IF(tipo_taglia IS NOT NULL AND tipo_taglia !='', tipo_taglia, NULL) AS tipo_taglia,
		IF(consegna IS NOT NULL AND consegna !='', consegna, NULL) AS consegna,
		IF(classe IS NOT NULL AND classe !='', classe, NULL) as classe,
		IF(tema IS NOT NULL AND tema !='', tema, NULL) as tema,
		ts_modifica,
		indice_taglia
	FROM ${ref("D_PRODOTTO")}
) AS BACKUP_PRODOTTI ON (
	BACKUP_PRODOTTI.barcode_negozio = O.barcode_negozio
	AND BACKUP_PRODOTTI.societa = O.societa
	AND BACKUP_PRODOTTI.anno BETWEEN (CAST(EXTRACT(YEAR FROM data_ordine) AS INT64) - 9) AND (CAST(EXTRACT(YEAR FROM data_ordine) AS INT64) + 1)
)
LEFT JOIN (
	SELECT
		PR.anno,
		PR.stagione,
		PR.societa,
		PR.listino,
		PR.modello,
		PR.prezzo,
		PR.tipo_prezzo,
		PR.controvalore,
		PR.divisa,
		PR.ts_inserimento
	FROM (
		SELECT *, ROW_NUMBER() OVER(PARTITION BY societa, modello, listino, anno, stagione, tipo_prezzo ORDER BY ts_inserimento DESC, prezzo IS NULL) AS rk
		FROM ${ref("D_PREZZO")}
		WHERE tipo_prezzo IN ('A', 'V', 'S')
	) PR
	LEFT JOIN ${ref("D_TIPO_PREZZO_CLIENTE")} USING (societa, anno, stagione, cliente, tipo_prezzo, progr_periodo)
	WHERE (
		(data_inizio IS NULL AND data_fine IS NULL)
		OR (CURRENT_DATE() BETWEEN data_inizio AND data_fine)
		OR (CURRENT_DATE() >= data_inizio AND data_fine IS NULL)
		OR (data_inizio IS NULL AND CURRENT_DATE <= data_fine)
	)
	AND PR.rk = 1
) AS PREZZI_VALIDI ON (
		O.societa = PREZZI_VALIDI.societa
	AND O.modello = PREZZI_VALIDI.modello
	AND (O.listino_acquisto = PREZZI_VALIDI.listino OR O.listino_vendita = PREZZI_VALIDI.listino)
	AND O.anno = PREZZI_VALIDI.anno
	AND O.stagione = PREZZI_VALIDI.stagione
)
WHERE (DATE(BACKUP_PRODOTTI.ts_modifica) = CURRENT_DATE OR DATE(PREZZI_VALIDI.ts_inserimento) = CURRENT_DATE)
-- negozio associato al cliente cambiato in anagrafica
OR neg.negozio != O.negozio
		