config {
    type: "incremental",
    schema: "DM_CRM",
    name: "D_INIZIATIVA"
}

pre_operations {
	DECLARE input_output_partitions ARRAY<INT64>;
	
	SET input_output_partitions = ARRAY(
		SELECT DISTINCT CAST((FLOOR((id_iniziativa - 1) / 100) * 100) as INT64) + 1
		FROM (
			SELECT DISTINCT CAST(SPLIT(id, ":::")[OFFSET(0)] AS INT64) AS id_iniziativa
			FROM ${ref("DM_SELLOUT_STAGING", "S_LOG_INIZIATIVA_NEGOZIO")}
			WHERE _PARTITIONDATE = CURRENT_DATE
		
			UNION DISTINCT
		
			SELECT DISTINCT CAST(id AS INT64)
			FROM ${ref("DM_SELLOUT_STAGING", "S_LOG_INIZIATIVA")}
			WHERE _PARTITIONDATE = CURRENT_DATE
		)
				);
}

WITH testata AS (
	SELECT * EXCEPT(rk, action)
	FROM (
		SELECT 
			*,
			ROW_NUMBER() OVER(PARTITION BY id_iniziativa ORDER BY ts_inserimento DESC, ts_modifica DESC, ts_creazione DESC) AS rk
	FROM UNNEST (output_partitions) op, ${ref("S_INIZIATIVA")}
		WHERE CAST(id_iniziativa AS INT64) BETWEEN op AND op + 99
	) AS subquery
	WHERE 
		rk = 1 
	AND action != 'DELETE'
	AND stato NOT IN ('NUOVO', 'ELIMINATO')
),
dettaglio AS (
	SELECT * EXCEPT(rk, action)
	FROM UNNEST (output_partitions) op, (
		SELECT 
			*,
			ROW_NUMBER() OVER(PARTITION BY id_iniziativa, negozio ORDER BY ts_inserimento DESC, ts_modifica DESC, ts_creazione DESC) AS rk
		FROM UNNEST (output_partitions) op, ${ref("S_INIZIATIVA_NEGOZIO")}
		WHERE CAST(id_iniziativa AS INT64) BETWEEN op AND op + 99
	) AS subquery
	WHERE 
		rk = 1 
	AND action != 'DELETE'
	AND stato NOT IN ('NUOVO', 'ELIMINATO') 
)
SELECT
	id_iniziativa,
	categoria,
	tipologia,
	descrizione,
	anno,
	stagione,
	brand,
	t.stato,
	t.data_inizio_iniziativa,
	t.data_fine_iniziativa,
	t.tipo_lista_invitati,
	data_invio_liste,
	data_convalida_liste,
	dataora_modifica,
	t.ts_inserimento,
	t.ts_modifica,
	t.ts_creazione,
	array_agg(struct(
		d.id_iniziativa,
		d.negozio,
		d.data_inizio_iniziativa,
		d.data_fine_iniziativa,
		d.tipo_lista_invitati,
		d.stato,
		data_inizio_osservazione,
		data_fine_osservazione,
		d.budget
	)) AS negozi
FROM UNNEST (output_partitions) op, testata AS t
LEFT JOIN dettaglio AS d USING(id_iniziativa)
GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17
		