config {
    type: "incremental",
    schema: "DM_CRM",
    name: "F_INVITATO"
}

pre_operations {
	DECLARE input_output_partitions ARRAY<INT64>;
	
	SET input_output_partitions = ARRAY(
		SELECT DISTINCT CAST((FLOOR((id_iniziativa - 1) / 100) * 100) as INT64) + 1
		FROM (
			SELECT DISTINCT CAST(SPLIT(id, ":::")[OFFSET(0)] AS INT64) AS id_iniziativa
			FROM ${ref("DM_SELLOUT_STAGING", "S_LOG_INVITATO")}
			WHERE _PARTITIONDATE = CURRENT_DATE
		
			UNION DISTINCT
		
			SELECT DISTINCT CAST(SPLIT(id, ":::")[OFFSET(0)] AS INT64) AS id_iniziativa
			FROM ${ref("DM_SELLOUT_STAGING", "S_LOG_INIZIATIVA_NEGOZIO")}
			WHERE _PARTITIONDATE = CURRENT_DATE
		
			UNION DISTINCT
		
			SELECT DISTINCT CAST(id AS INT64)
			FROM ${ref("DM_SELLOUT_STAGING", "S_LOG_INIZIATIVA")}
			WHERE _PARTITIONDATE = CURRENT_DATE
		)
				);
}

WITH new_table AS (
	SELECT 
		* EXCEPT(rk, action),
	FROM (
		SELECT 
			*,
			ROW_NUMBER() OVER(PARTITION BY id_iniziativa, cod_negozio, progressivo_invitato ORDER BY ts_inserimento DESC, ts_modifica DESC, ts_creazione DESC) AS rk,
	FROM UNNEST (output_partitions) op, ${ref("S_INVITATO")}
		WHERE
			id_iniziativa BETWEEN op AND op + 99
	) AS subquery
	WHERE 
		rk = 1
	AND action != "DELETE"
)
SELECT
	n.*
FROM UNNEST (output_partitions) op, new_table n
JOIN ${ref("D_INIZIATIVA")} USING(id_iniziativa)
WHERE n.stato LIKE "VALIDO%"
OR n.stato = "DEFINITO"
