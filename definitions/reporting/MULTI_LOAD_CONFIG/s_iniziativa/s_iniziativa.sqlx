config {
    type: "incremental",
    schema: "DM_SELLOUT_STAGING",
    name: "S_INIZIATIVA"
}

with output_partitions as (
    SELECT value AS partition_start,
        value + 99 AS partition_end
    FROM ${ref("s_iniziativa_output_partitions")}
)

SELECT 
	CAST(id AS INT64) AS id_iniziativa,
	action,
	iniziativa.categoria AS categoria,
	iniziativa.tipologia AS tipologia,
	iniziativa.descrizione AS descrizione,
	CAST(SUBSTR (iniziativa.annostagione, 1, 4) AS INT64) AS anno,
	CAST(SUBSTR (iniziativa.annostagione, 5) AS INT64) AS stagione,
	iniziativa.brand AS brand,
	iniziativa.stato AS stato,
	SAFE_CAST(iniziativa.data_inizio_iniziativa AS date) AS data_inizio_iniziativa,
	SAFE_CAST(iniziativa.data_fine_iniziativa AS date) AS data_fine_iniziativa,
	iniziativa.tipo_lista_invitati AS tipo_lista_invitati,
	SAFE_CAST(iniziativa.data_emissione AS DATE) AS data_invio_liste,
	SAFE_CAST(iniziativa.data_convalida_liste AS date) AS data_convalida_liste,
	SAFE_CAST(iniziativa.dataora_creazione AS datetime) AS dataora_creazione,
	SAFE_CAST(iniziativa.dataora_modifica AS datetime) AS dataora_modifica,
	TIMESTAMP(_PARTITIONTIME) AS ts_inserimento,
	CURRENT_TIMESTAMP AS ts_modifica,
	SAFE_CAST(resource_timestamp AS TIMESTAMP) AS ts_creazione,
FROM ${ref("S_LOG_INIZIATIVA")}, unnest(attributes) AS iniziativa
WHERE
	_PARTITIONDATE IN (SELECT * FROM ${ref("s_iniziativa_input_partitions")})
AND CAST(id AS INT64) BETWEEN op.partition_start AND op.partition_end
		