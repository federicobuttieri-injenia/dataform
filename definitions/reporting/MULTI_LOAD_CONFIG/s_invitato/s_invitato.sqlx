config {
    type: "incremental",
    schema: "injenia",
    name: "S_INVITATO"
}

with output_partitions as (
    SELECT value AS partition_start,
        value + 99 AS partition_end
    FROM ${ref("s_invitato_output_partitions")}
)

SELECT 
	* EXCEPT(dataora_partecipazione),
	MAX(dataora_partecipazione) AS dataora_partecipazione
FROM (
	SELECT 
		CAST(SPLIT(id, ":::")[OFFSET(0)] AS INT64) AS id_iniziativa,
		SPLIT(id, ":::")[OFFSET(1)] AS cod_negozio,
		CAST(SPLIT(id, ":::")[OFFSET(2)] AS INT64) AS progressivo_invitato,
		action,
		SAFE_CAST(invitato.contatto_negozio AS INT64) AS contatto_negozio,
		SAFE_CAST(invitato.pk_consumer AS INT64) AS pk_consumer,
		invitato.stato AS stato,
		ARRAY_LENGTH(invitato.crm_accoglimento) > 0 AS partecipanti,
		IF(invitato.stato = "VALIDO_IMBUCATO", 1, 0) AS fuori_lista,
		invitato.primo_contatto_negozio_data AS primo_contatto_negozio_data,
		TIMESTAMP(_PARTITIONTIME) AS ts_inserimento,
		CURRENT_TIMESTAMP AS ts_modifica,
		SAFE_CAST(resource_timestamp AS TIMESTAMP) AS ts_creazione,
		accoglimento.dataora_partecipazione AS dataora_partecipazione
	FROM ${ref("S_LOG_INVITATO")}, UNNEST(attributes) AS invitato
	LEFT JOIN UNNEST(invitato.crm_accoglimento) AS accoglimento
	WHERE
		_PARTITIONDATE IN (SELECT * FROM ${ref("s_invitato_input_partitions")})
	AND CAST(SPLIT(id, ":::")[OFFSET(0)] AS INT64) BETWEEN op.partition_start AND op.partition_end
) AS subquery
GROUP BY id_iniziativa, cod_negozio, progressivo_invitato, contatto_negozio, action, pk_consumer, stato, partecipanti, fuori_lista, primo_contatto_negozio_data, ts_inserimento, ts_modifica, ts_creazione
		